@using Kendo.Mvc.UI

@model  EulerExchangeAppDev.Models.RingsItemDetails

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Rings</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Decription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Decription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Decription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Radius, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Radius, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Radius, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Circumference, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Circumference, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Circumference, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GemstoneID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

             @*   @Html.Kendo().MultiSelect()
    .Name("GemstoneType")
    .DataTextField("GemstoneID")
    .DataValueField("GemstoneID")
    .Placeholder("Select products...")
    .AutoBind(false)
    .Value(new[] { new {ProductName= "Chang", ProductID = 2 }, new { ProductName = "Uncle Bob's Organic Dried Pears", ProductID = 7 } })
        .DataSource(source => {
        source.Read(read =>
        {
            read.Action("GetGemstoneTypes", "GemstoneTypes");
        })
             .ServerFiltering(true);
        })*@

                @(Html.Kendo().MultiSelect()
          .Name("required")
          .Placeholder("Select attendees...")
          .BindTo(new List<string>() {
              "Diamond",
              "Morganite",
              "Sapphire",
              "Aquamarine",
              "Marquise",
              "Jade",
              "Ruby",
              "Quartz",
              "Amethyst",
              "Tyrquoise",
              "Amazonite",
              "Opal",
              "Emerald",
              "Topaz",
              "Onyx"
          })         
                )
                @Html.ValidationMessageFor(model => model.GemstoneID, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.GemstoneID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().Upload()
                        .Name("files")
                        //.Async(a => a
                        ////    .Save("SaveAndPersist", "Upload")
                        //    .Remove("RemoveAndPersist", "Upload")
                        //    .AutoUpload(true)
                    //    )
                        //.Files(files =>
                        //{
                        ////    foreach (var f in Model)
                        ////    {
                        ////        files.Add().Name(f.Name).Extension(f.Extension).Size(f.Size);
                        ////}
                        //})
                )
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.ImageURLID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().Upload()
                    .Name("files")
                    .Async(a => a
                        .Save("Save", "Rings")
                        .Remove("Remove", "Rings")
                        .AutoUpload(true)
                    )
                )               
            </div>
        </div>


       
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
