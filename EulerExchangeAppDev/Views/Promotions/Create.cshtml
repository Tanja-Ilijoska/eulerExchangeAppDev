@model EulerExchangeAppDev.Models.PromotionsViewModel

@{
    ViewBag.Title = "Create";
}

<script src="@Url.Content("~/Scripts/jquery-1.10.2.js")" type="text/javascript"></script>

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Promotions</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MinOrderGram, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MinOrderGram, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MinOrderGram, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MinOrderPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MinOrderPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MinOrderPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PeriodFrom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 datepicker">
                @Html.EditorFor(model => model.PeriodFrom, new {htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PeriodFrom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PeriodTo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PeriodTo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PeriodTo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <a onclick="checkAll()">SelectAll</a> | <a onclick="uncheckAll()">UnselectAll</a>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rings, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox" name="checkb">
                    @Html.EditorFor(model => model.Rings)
                    @Html.ValidationMessageFor(model => model.Rings, "", new { @class = "text-danger", @name = "checkbox" })
                    @*@Html.CheckBoxFor(model => model.Rings, new { @checked = "checked" })*@
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EngagementRings, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox" name="checkb">
                    @Html.EditorFor(model => model.EngagementRings)
                    @Html.ValidationMessageFor(model => model.EngagementRings, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WeddingRings, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox" name="checkb">
                    @Html.EditorFor(model => model.WeddingRings)
                    @Html.ValidationMessageFor(model => model.WeddingRings, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pendants, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox" name="checkb">
                    @Html.EditorFor(model => model.Pendants)
                    @Html.ValidationMessageFor(model => model.Pendants, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Chains, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox" name="checkb">
                    @Html.EditorFor(model => model.Chains)
                    @Html.ValidationMessageFor(model => model.Chains, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Necklaces, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox" name="checkb">
                    @Html.EditorFor(model => model.Necklaces)
                    @Html.ValidationMessageFor(model => model.Necklaces, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Bracelets, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox" name="checkb">
                    @Html.EditorFor(model => model.Bracelets)
                    @Html.ValidationMessageFor(model => model.Bracelets, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Earrings, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox" name="checkb">
                    @Html.EditorFor(model => model.Earrings)
                    @Html.ValidationMessageFor(model => model.Earrings, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LightSets, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox" name="checkb">
                    @Html.EditorFor(model => model.LightSets)
                    @Html.ValidationMessageFor(model => model.LightSets, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SetsWatchesSunglasses, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox" name="checkb">
                    @Html.EditorFor(model => model.SetsWatchesSunglasses)
                    @Html.ValidationMessageFor(model => model.SetsWatchesSunglasses, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script>

    function check(value) {
        var checkboxes = $('div[name=checkb]');

        for (i = 0; i < checkboxes.length; i++) {
            checkboxes[i].children[0].checked = value;
        }
    }

    function checkAll() {
        check(true);
    }

    function uncheckAll() {
        check(false);
    }


</script>