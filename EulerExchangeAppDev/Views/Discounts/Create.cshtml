@model EulerExchangeAppDev.Models.DiscountsViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Create discounts</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="col-md-2 control-label">
                @Html.LabelFor(model => model.Persent, htmlAttributes: new { @style = "color:black", @onclick = "change('persent')", @id="lbl_persent"})
                @Html.LabelFor(model => model.FixPrice, htmlAttributes: new { @style = "color:gray", @onclick = "change('fixPrice')", @id = "lbl_fixPrice" })
                @Html.LabelFor(model => model.Millem, htmlAttributes: new { @style = "color:gray", @onclick = "change('millem')", @id = "lbl_millem" })
            </div>
            <div class="col-md-10" id="tb_persent">
                @Html.EditorFor(model => model.Persent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Persent, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-10"  style="display: none" id="tb_fixPrice">
                @Html.EditorFor(model => model.FixPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FixPrice, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-10" style="display: none" id="tb_millem">
                @Html.EditorFor(model => model.Millem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Millem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MinOrderGram, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MinOrderGram, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MinOrderGram, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MinOrderPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MinOrderPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MinOrderPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PeriodFrom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PeriodFrom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PeriodFrom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PeriodTo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PeriodTo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PeriodTo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    function change(button)
    {
        if (button == "persent") {
            $("#lbl_persent").css("color", "black");
            $("#lbl_fixPrice").css("color", "gray");
            $("#lbl_millem").css("color", "gray");

            $("#tb_persent").show();
            $("#tb_fixPrice").hide();
            $("#tb_millem").hide();
        }
        if (button == "fixPrice") {
            $("#lbl_persent").css("color", "gray");
            $("#lbl_fixPrice").css("color", "black");
            $("#lbl_millem").css("color", "gray");

            $("#tb_persent").hide();
            $("#tb_fixPrice").show();
            $("#tb_millem").hide();
        }
        if (button == "millem") {
            $("#lbl_persent").css("color", "gray");
            $("#lbl_fixPrice").css("color", "gray");
            $("#lbl_millem").css("color", "black");

            $("#tb_persent").hide();
            $("#tb_fixPrice").hide();
            $("#tb_millem").show();
        }
    }
</script>